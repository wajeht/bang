# name: Update Bangs
#
# on:
#     schedule:
#         # Run every day at 12 PM UTC to update bangs
#         - cron: '0 12 * * *'
#     workflow_dispatch: # Allow manual triggering
#
# jobs:
#     update-bangs:
#         name: Update bangs from Kagi and DuckDuckGo
#         runs-on: ubuntu-latest
#         outputs:
#             changed: ${{ steps.verify-changed-files.outputs.changed }}
#
#         permissions:
#             contents: write
#
#         strategy:
#             matrix:
#                 node-version: [22.x]
#
#         steps:
#             - uses: actions/checkout@v4
#             - name: Use Node.js ${{ matrix.node-version }}
#               uses: actions/setup-node@v4
#               with:
#                   node-version: ${{ matrix.node-version }}
#                   cache: 'npm'
#
#             - name: Install dependencies
#               run: npm i
#
#             - name: Update bangs from multiple sources
#               run: npm run build:bang
#
#             - name: Format updated bangs
#               run: npm run format
#
#             - name: Check for changes
#               id: verify-changed-files
#               run: |
#                   if [ -n "$(git status --porcelain)" ]; then
#                     echo "changed=true" >> $GITHUB_OUTPUT
#                     echo "Files have been modified:"
#                     git diff --name-only
#                     echo "Diff summary:"
#                     git diff --stat
#                   else
#                     echo "changed=false" >> $GITHUB_OUTPUT
#                     echo "No files were modified."
#                   fi
#
#             - name: Commit updated bangs
#               if: steps.verify-changed-files.outputs.changed == 'true'
#               uses: stefanzweifel/git-auto-commit-action@v4
#               with:
#                   commit_message: 'feat: update bangs data from Kagi and DuckDuckGo'
#                   file_pattern: 'src/db/bang.ts'
#               env:
#                   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#     deploy:
#         needs: [update-bangs]
#         name: Deploy to Production
#         runs-on: ubuntu-latest
#         if: needs.update-bangs.outputs.changed == 'true'
#
#         environment:
#             name: production
#             url: https://bang.jaw.dev/
#
#         steps:
#             - uses: actions/checkout@v4
#
#             - name: Set up Docker Buildx
#               uses: docker/setup-buildx-action@v3
#
#             - name: Login to Container Registry
#               uses: docker/login-action@v3
#               with:
#                   registry: ghcr.io
#                   username: ${{ github.repository_owner }}
#                   password: ${{ secrets.GH_TOKEN }}
#
#             - name: Generate Image Name
#               id: image-name
#               run: |
#                   IMAGE_URL=$(echo ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:$(echo ${{ github.sha }} | cut -c1-7) | tr '[:upper:]' '[:lower:]')
#                   echo "IMAGE_URL=$IMAGE_URL" >> $GITHUB_OUTPUT
#
#             - name: Build and push Docker Image
#               uses: docker/build-push-action@v4
#               with:
#                   context: .
#                   file: ./Dockerfile.prod
#                   push: true
#                   tags: ${{ steps.image-name.outputs.IMAGE_URL }}
#                   cache-from: type=gha
#                   cache-to: type=gha,mode=max
#
#             - name: Deploy Image to Server
#               uses: caprover/deploy-from-github@v1.1.2
#               with:
#                   server: '${{ secrets.CAPROVER_SERVER }}'
#                   app: '${{ secrets.APP_NAME }}'
#                   token: '${{ secrets.APP_TOKEN }}'
#                   image: ${{ steps.image-name.outputs.IMAGE_URL }}
