FROM node:22-alpine AS build

WORKDIR /usr/src/app

# Copy only package files first for better layer caching
COPY package*.json ./

# Install all dependencies including dev for build tools
RUN npm ci --no-audit --no-fund

# Copy only TypeScript config first (changes less frequently)
COPY tsconfig*.json ./

# Copy source files
COPY src ./src
COPY public ./public
COPY scripts ./scripts
COPY README.md ./

# Build with TypeScript incremental compilation (excluding tests) and minify
RUN npm run build:prod && \
    rm -rf src/tests src/**/*.test.* && \
    find dist -name "*.map" -delete

FROM node:22-alpine

# Combine RUN commands and use --no-cache flag
RUN apk add --no-cache curl && \
    addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

WORKDIR /usr/src/app

# Copy only production dependencies and built files
COPY --chown=nodejs:nodejs package*.json ./
RUN npm ci --only=production --no-audit --no-fund && \
    npm cache clean --force

# Copy built application
COPY --chown=nodejs:nodejs --from=build /usr/src/app/dist ./dist
COPY --chown=nodejs:nodejs --from=build /usr/src/app/public ./public
COPY --chown=nodejs:nodejs --from=build /usr/src/app/dist/src/routes ./src/routes
COPY --chown=nodejs:nodejs --from=build /usr/src/app/README.md ./

# Display directory structure excluding node_modules
RUN ls -d */ | grep -v node_modules | xargs -I {} tree {}

USER nodejs

EXPOSE 80

HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 CMD curl -f http://localhost:80/healthz || exit 1

ENV APP_ENV production

CMD ["node", "--no-warnings", "--max-old-space-size=512", "dist/src/server.js"]
