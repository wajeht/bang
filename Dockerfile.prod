FROM node:22-alpine AS build

WORKDIR /usr/src/app

# Copy only package files first for better layer caching
COPY package*.json ./

# Use npm ci with optimized flags (no BuildKit required)
RUN npm ci --no-audit --no-fund

# Copy source files (excluding unnecessary files)
COPY tsconfig*.json ./
COPY src ./src
COPY public ./public
COPY README.md ./

# Build with TypeScript incremental compilation
RUN npm run build

FROM node:22-alpine

# Combine RUN commands and use --no-cache flag
RUN apk add --no-cache curl && \
    addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

WORKDIR /usr/src/app

# Copy only production dependencies and built files
COPY --chown=nodejs:nodejs package*.json ./
RUN npm ci --only=production --no-audit --no-fund && \
    npm cache clean --force

# Copy built application
COPY --chown=nodejs:nodejs --from=build /usr/src/app/dist ./dist
COPY --chown=nodejs:nodejs --from=build /usr/src/app/public ./public
COPY --chown=nodejs:nodejs --from=build /usr/src/app/src/views ./src/views
COPY --chown=nodejs:nodejs --from=build /usr/src/app/README.md ./

USER nodejs

EXPOSE 80

HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 CMD curl -f http://localhost:80/healthz || exit 1

ENV APP_ENV production

CMD ["node", "--no-warnings", "dist/src/server.js"]
